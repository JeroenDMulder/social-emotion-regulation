)
#| label: fig-missing
#| fig-cap: "Missing data patterns."
#| fig-width: 6
#| fig-height: 3
#| warning: false
df_noise_wide <- read.csv("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_SNAT_Be.csv") |>
select(SubjectID, T1_noiseblast, T2_noiseblast, T3_noiseblast) |>
rename(id_orig = SubjectID) |>
naniar::replace_with_na_all(~ .x == -999) |>
group_by(id_orig) |>
summarise(
noise1 = ifelse(all(is.na(T1_noiseblast)), NA, 1),
noise2 = ifelse(all(is.na(T2_noiseblast)), NA, 1),
noise3 = ifelse(all(is.na(T3_noiseblast)), NA, 1)
)
df_INS_wide <- haven::read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
dplyr::select(SubjectID, ends_with("INS_Neg_Neut")) |>
dplyr::rename(
id_orig = SubjectID,
AI1 = T1_INS_Neg_Neut,
AI2 = T2_INS_Neg_Neut,
AI3 = T3_INS_Neg_Neut
)
df_MPFC_wide <- haven::read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
dplyr::select(SubjectID, ends_with("MPFC_Neg_Neut")) |>
dplyr::rename(
id_orig = SubjectID,
MPFC1 = T1_MPFC_Neg_Neut,
MPFC2 = T2_MPFC_Neg_Neut,
MPFC3 = T3_MPFC_Neg_Neut
)
df_wide <- haven::read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
dplyr::select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(
id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut
) |>
dplyr::right_join(df_INS_wide, by = "id_orig") |>
dplyr::right_join(df_MPFC_wide, by = "id_orig") |>
dplyr::right_join(df_noise_wide, by = "id_orig") |>
select(-id_orig)
rm("df_noise_wide", "df_INS_wide", "df_MPFC_wide")
ggmice::plot_pattern(
data = df_wide,
square = FALSE
) +
ggplot2::theme(text = element_text(size = 12)) +
ggplot2::scale_x_discrete(
limits = c("DLPFC1", "INS1", "MPFC1", "noise1",
"DLPFC2", "INS2", "MPFC2", "noise2",
"DLPFC3", "INS3", "MPFC3", "noise3")
)
ggmice::plot_pattern(
data = df_wide,
square = FALSE,
caption = FALSE
) +
ggplot2::theme(text = element_text(size = 12)) +
ggplot2::scale_x_discrete(
limits = c("DLPFC1", "INS1", "MPFC1", "noise1",
"DLPFC2", "INS2", "MPFC2", "noise2",
"DLPFC3", "INS3", "MPFC3", "noise3")
)
#| label: fig-spaghetti
#| fig-cap: "Observed neural responses across age."
#| fig-width: 6
#| fig-height: 3
#| fig-column: page-right
#| warning: false
knitr::include_graphics("C:\\Users\\5879167\\Documents\\GitHub\\social-emotion-regulation\\figures\\p_brain.png")
R.version
rstan::stan_version()
load("C:\\Users\\5879167\\Documents\\GitHub\\social-emotion-regulation\\models\\out_phaseII.Rds")
knitr::include_graphics(".\\figures\\plot_MPFC_predicted.png")
knitr::include_graphics("figures\\ppc-MPFC.png")
knitr::include_graphics(".\\figures\\brms-MPFC.png")
knitr::include_graphics(".\\figures\\plot_INS_predicted.png")
knitr::include_graphics("figures\\ppc-INS.png")
knitr::include_graphics(".\\figures\\brms-INS.png")
knitr::include_graphics(".\\figures\\plot_DLPFC_predicted.png")
knitr::include_graphics("figures\\ppc-DLPFC.png")
knitr::include_graphics(".\\figures\\brms-DLPFC.png")
knitr::include_graphics(".\\figures\\brms-DLPFC.png")
knitr::include_graphics(".\\figures\\plot_noise_predicted.png")
knitr::include_graphics(".\\figures\\brms-noise.png")
knitr::include_graphics("figures\\ppc-noise.png")
knitr::include_graphics(".\\figures\\ppc-noise-rcens.png")
load("C:\\Users\\5879167\\Documents\\GitHub\\social-emotion-regulation\\models\\out_phaseII.Rds")
summary(out_phaseII)
#| label: noise-ppc
#| fig-cap: "Posterior predictive checks (ppc) for the outcome noise. The model underlying the left plot assumes a normally-distributed outcome; the model underlying the right plot assumes a t-distributed outcome."
#| fig-width: 10
#| fig-height: 5
#| fig-column: page-right
#| warning: false
knitr::include_graphics("figures\\ppc-noise.png")
#| label: fig-noise-ppc-rcens
#| echo: FALSE
#| fig-cap: "Posterior predictive checks (ppc) for the outcome noise from two different models. The model from the left panel assumes a normally-distributed outcome. The model from the right panel assumes a t-distributed outcome."
#| fig-width = 10
#| fig-height = 5
#| fig-column: page-right
#| warning: false
knitr::include_graphics(".\\figures\\ppc-noise-rcens.png")
#| label: fig-noise-ppc-rcens
#| echo: FALSE
#| fig-cap: "Posterior predictive checks (ppc) for the outcome noise from two different models. The model from the left panel assumes a normally-distributed outcome. The model from the right panel assumes a t-distributed outcome."
#| fig-width = 10
#| fig-height = 5
#| fig-column: page-right
#| warning: false
knitr::include_graphics(".\\figures\\ppc-noise-rcens.png")
#| label: fig-cens
#| fig-cap: "Noise blast duration (seconds) per measurement occasion."
#| fig-width: 11
#| fig-height: 3
#| fig-column: page-right
#| warning: false
read.csv("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_SNAT_Be.csv") |>
naniar::replace_with_na_all(~ .x == -999) |>
dplyr::mutate(
noise1 = T1_noiseblast / 1000,
noise2 = T2_noiseblast / 1000,
noise3 = T3_noiseblast / 1000
) |>
dplyr::select(noise1, noise2, noise3) |>
tidyr::pivot_longer(
cols = noise1:noise3,
names_to = "wave",
names_prefix = "noise",
names_transform = list(wave = as.integer),
values_to = "noise"
) |>
dplyr::mutate(
censored = ifelse(noise == 3.500, 1, 0),
wave_factor = factor(
wave,
levels = c("1", "2", "3"),
labels = c("Wave 1", "Wave 2", "Wave 3")
)
) |>
ggplot2::ggplot(aes(x = noise)) +
ggplot2::geom_histogram() +
ggplot2::scale_x_continuous(breaks = c(0, .5, 1, 1.5, 2, 2.5, 3, 3.5)) +
ggplot2::facet_wrap(. ~ wave_factor, ncol = 3) +
ggplot2::labs(x = "Behavioural response (ms)", y = "Frequency") +
ggplot2::theme_light() +
ggplot2::theme(text = element_text(size = 12))
#| label: fig-spaghetti
#| fig-cap: "Observed neural responses across age."
#| fig-width: 10
#| fig-height: 5
#| fig-column: page-right
#| warning: false
df_age <- read.table(
"C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_Age.txt",
header = TRUE
) |>
naniar::replace_with_na_all(~ .x == 999) |>
dplyr::mutate(
id_orig = SubjectID,
id = SubjectID %% 100,
age1 = Age_wave1,
ageW1 = Age_wave1,
age2 = Age_wave3,
age3 = Age_wave5,
) |>
dplyr::select(id, id_orig, age1, age2, age3, ageW1) |>
tidyr::pivot_longer(
cols = age1:age3,
names_to = "wave",
names_prefix = "age",
names_transform = list(wave = as.integer),
values_to = "age"
) |>
dplyr::mutate(
agec = age - mean(age, na.rm = TRUE), # Mean age approximately 9 years and 9 months
agec2 = agec^2,
ageW1c = ageW1 - mean(age, na.rm = TRUE), # Needed for imputing missing agec
ageW1c2 = ageW1c^2, # Needed for imputing missing agec2
wave0 = wave - 1, # Needed for imputing missing agec
wave02 = wave0^2, # Needed for imputing missing agec2
ageW1c_wave0 = ageW1c * wave0 # Needed for imputing missing agec2
) |>
dplyr::select(-ageW1) |>
as.data.frame()
df_INS <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("INS_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
INS1 = T1_INS_Neg_Neut,
INS2 = T2_INS_Neg_Neut,
INS3 = T3_INS_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "INS",
values_to = "INS",
names_transform = list(wave = as.integer)
)
df_MPFC <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("MPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
MPFC1 = T1_MPFC_Neg_Neut,
MPFC2 = T2_MPFC_Neg_Neut,
MPFC3 = T3_MPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "MPFC",
values_to = "MPFC",
names_transform = list(wave = as.integer)
)
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
dplyr::filter(!is.na(ageW1c))
View(df_brain)
#| label: fig-spaghetti
#| fig-cap: "Observed neural responses across age."
#| fig-width: 10
#| fig-height: 5
#| fig-column: page-right
#| warning: false
df_age <- read.table(
"C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_Age.txt",
header = TRUE
) |>
naniar::replace_with_na_all(~ .x == 999) |>
dplyr::mutate(
id_orig = SubjectID,
id = SubjectID %% 100,
age1 = Age_wave1,
age2 = Age_wave3,
age3 = Age_wave5,
) |>
dplyr::select(id, id_orig, age1, age2, age3) |>
tidyr::pivot_longer(
cols = age1:age3,
names_to = "wave",
names_prefix = "age",
names_transform = list(wave = as.integer),
values_to = "age"
) |>
as.data.frame()
View(df_age)
df_INS <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("INS_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
INS1 = T1_INS_Neg_Neut,
INS2 = T2_INS_Neg_Neut,
INS3 = T3_INS_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "INS",
values_to = "INS",
names_transform = list(wave = as.integer)
)
df_MPFC <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("MPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
MPFC1 = T1_MPFC_Neg_Neut,
MPFC2 = T2_MPFC_Neg_Neut,
MPFC3 = T3_MPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "MPFC",
values_to = "MPFC",
names_transform = list(wave = as.integer)
)
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
dplyr::filter(!is.na(ageW1c))
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave"))
View(df_brain)
p_INS <- ggplot(df_brain, aes(x = age, y = INS)) +
geom_line(aes(color = factor(id_orig)), size = .2) +
geom_smooth(aes(group = 1),
size = 2,
method = "lm",
se = FALSE,
colour = "black") +
labs(x = "Age (years)", y = "Observed AI response") +
theme_light() +
theme(text = element_text(size = 12), legend.position = "none")
p_INS
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
tidyr::pivot_longer(
cols = noise1:noise3,
names_to = "RoI",
values_to = "response"
)
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
tidyr::pivot_longer(
cols = c("INS", "MPFC", "DLPFC"),
names_to = "RoI",
values_to = "response"
)
View(df_brain)
p_brain <- ggplot(df_brain, aes(x = age, y = response)) +
geom_line(aes(color = factor(id_orig)), size = .2) +
geom_smooth(aes(group = 1),
size = 2,
method = "lm",
se = FALSE,
colour = "black") +
labs(x = "Age (years)", y = "Observed DLPFC response") +
ggplot2::facet_wrap(. ~ wave_factor, ncol = 3) +
theme_light() +
theme(text = element_text(size = 12), legend.position = "none")
p_brain
p_brain <- ggplot(df_brain, aes(x = age, y = response)) +
geom_line(aes(color = factor(id_orig)), size = .2) +
geom_smooth(aes(group = 1),
size = 2,
method = "lm",
se = FALSE,
colour = "black") +
labs(x = "Age (years)", y = "Observed DLPFC response") +
ggplot2::facet_wrap(. ~ RoI, ncol = 3) +
theme_light() +
theme(text = element_text(size = 12), legend.position = "none")
p_brain
df_INS <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("INS_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
AI1 = T1_INS_Neg_Neut,
AI2 = T2_INS_Neg_Neut,
AI3 = T3_INS_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "AI",
values_to = "AI",
names_transform = list(wave = as.integer)
)
df_MPFC <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("MPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
MPFC1 = T1_MPFC_Neg_Neut,
MPFC2 = T2_MPFC_Neg_Neut,
MPFC3 = T3_MPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "MPFC",
values_to = "MPFC",
names_transform = list(wave = as.integer)
)
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
tidyr::pivot_longer(
cols = c("INS", "MPFC", "DLPFC"),
names_to = "RoI",
values_to = "response"
)
df_brain <- read_spss("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\data\\202204_Research_EmotionRegulation_MRI.sav") |>
select(SubjectID, ends_with("DLPFC_Neg_Neut")) |>
dplyr::rename(id_orig = SubjectID,
DLPFC1 = T1_DLPFC_Neg_Neut,
DLPFC2 = T2_DLPFC_Neg_Neut,
DLPFC3 = T3_DLPFC_Neg_Neut) |>
tidyr::pivot_longer(
cols = !id_orig,
names_to = "wave",
names_prefix = "DLPFC",
values_to = "DLPFC",
names_transform = list(wave = as.integer)
) |>
dplyr::right_join(df_INS, by = c("id_orig", "wave")) |>
dplyr::right_join(df_MPFC, by = c("id_orig", "wave"))|>
dplyr::right_join(df_age, by = c("id_orig", "wave")) |>
tidyr::pivot_longer(
cols = c("AI", "MPFC", "DLPFC"),
names_to = "RoI",
values_to = "response"
)
p_brain <- ggplot(df_brain, aes(x = age, y = response)) +
geom_line(aes(color = factor(id_orig)), size = .2) +
geom_smooth(aes(group = 1),
size = 2,
method = "lm",
se = FALSE,
colour = "black") +
labs(x = "Age (years)", y = "Observed DLPFC response") +
ggplot2::facet_wrap(. ~ RoI, ncol = 3) +
theme_light() +
theme(text = element_text(size = 12), legend.position = "none")
ggplot(df_brain, aes(x = age, y = response)) +
geom_line(aes(color = factor(id_orig)), size = .2) +
geom_smooth(aes(group = 1),
size = 2,
method = "lm",
se = FALSE,
colour = "black") +
labs(x = "Age (years)", y = "Observed DLPFC response") +
ggplot2::facet_wrap(. ~ RoI, ncol = 3) +
theme_light() +
theme(text = element_text(size = 12), legend.position = "none")
#| label: cfa-wellbeing
#| eval: FALSE
# Confirmatory factor analysis social well-being
m_cfa_well <- '
# 1-factor model for social well-being
well =~ 1*co + who + sc + cf + gs
'
fit_cfa_well <- cfa(m_cfa_well, data = df_well)
source("~/.active-rstudio-document", echo=TRUE)
#| label: fig-results-noise
#| echo: FALSE
#| fig-cap: "Model results for ."
#| fig-width: 10
#| fig-height: 5
#| warning: false
knitr::include_graphics(".\\figures\\brms-noise.png")
#| label: fig-DLPFC-ppc
#| echo: FALSE
#| fig-cap: "Posterior predictive check for the outcome DLPFC, and imputed values of age and age-squared.The dark blue line represents observed data, and the light blue lines represent model predicted (replicated) values."
#| warning: false
knitr::include_graphics("figures\\ppc-DLPFC.png")
load("C:\\Users\\5879167\\surfdrive\\Research\\Applied - Social emotion regulation\\brms\\out_phaseII.Rds")
summary(out_phaseII)
